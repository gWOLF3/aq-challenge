
<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title data-n-head="true">AQ â€“ Home</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0" crossorigin="anonymous"></script>
<link rel="stylesheet" href="./boiler.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<style>

#logout {
  line-height: normal;
  margin-left:auto;
  border-radius: 30px;
  padding: 12px 20px;
  background-color: black;
  color: white;
  font-weight: bold;
  font-size:90%;
}
.stack {
  flex-direction: column;
}
.bimg {
  max-width: 300px;
  height: auto;
  max-height: 200px;
}
.bl {
  width: 100%;
  flex-direction: row;
  display: flex;
  align-items: center;
  padding: 15px;
}

.bl * {
  padding-left: 5px;
  padding-right: 5px;
}
.thumbnail {
  min-height: 100px;
  height: 150px;
  width: 200px;
  overflow: hidden;
  padding: 10px;
}
div.bl:nth-child(odd) {
  background: rgba(0,0,0,0.04);
}

#body {
  padding-top: 5%;
}

.litems {
  width: 100%;
  display: inline-flex;
  justify-content: space-between;
}

[data-vstatus="1"] > [data-vote="1"] > .bi-arrow-up-square-fill {
  color: black
}
[data-vstatus="1"] > [data-vote="-1"] > .bi-arrow-down-square-fill {
  color: grey
}
[data-vstatus="0"] > * > .bi-arrow-up-square-fill {
  color: grey
}
[data-vstatus="0"] > * > .bi-arrow-down-square-fill {
  color: grey
}
[data-vstatus="-1"] > [data-vote="-1"] > .bi-arrow-down-square-fill {
  color: black
}
[data-vstatus="-1"] > [data-vote="1"] > .bi-arrow-up-square-fill {
  color: grey
}

</style>
</head>
<body>
  <div id=header>
    <div class=flexer>
      <a href='/'>
        <img id='headerlogo' src='/aq-logo.svg'>
      </a>
  </div>
    <button id=logout onclick='window.location.href="/logout"'>Logout</button>
  </div>
  <div id='body'>
    <div id='boards'>
        <% if (typeof boards != 'undefined') { %>
            <% for (board of boards) { %>
             <% if (board.url && board.name) { %>
                <div class=bl>
                  <div id='<%=board.name%>' class='stack' data-vstatus='<%=board.myvote%>'> 
                    <div class='button' data-board='<%=board.name%>' data-vote='1' onclick='vote(this);'>
                      <i id='<%=board.name%>-up' class="bi bi-arrow-up-square-fill"></i>  
                    </div>
                    <div class='button' data-board='<%=board.name%>' data-vote='-1' onclick="vote(this);">
                      <i id='<%=board.name%>-down' class="bi bi-arrow-down-square-fill"></i>  
                    </div>
                  </div>
                  <div>
                    <img class='bimg thumbnail' src=<%= board.url %> >
                  </div>
                  <div class='litems'>
                    <div class>
                      <h3> <%= board.name.toLowerCase() %> </h3>
                    </div>
                    <div>
                      <h3> <span id='<%=board.name%>-total'> <%= JSON.stringify(board.total)%> </span> </h3>
                    </div>
                  </div>
                </div>
          <% } %>
        <% } %>
      <% } %>
    </ul>
  </div>
<footer> 
</footer>
</body>
<script>
const vote = async (d) => {
  let obj = {}
  obj.board = d.getAttribute('data-board')
  obj.vote = d.getAttribute('data-vote')
  const voteStatus = document.getElementById(obj.board).getAttribute('data-vstatus')
  // only make vote if current vote is zero and changing vote, otherwise 'unvote'
  if (voteStatus != obj.vote && voteStatus == 0) {
    document.getElementById(obj.board).setAttribute('data-vstatus', obj.vote)                
    let count = document.getElementById(`${obj.board}-total`).innerText
    document.getElementById(`${obj.board}-total`).innerText = `${parseInt(count) + (parseInt(obj.vote)) }`
    try {
      const r = await fetch('/vote', 
        {

          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(obj),
        }
      )
      console.log('vote succesful', r)
    } catch (e) {
      console.error('issue posting vote')
    }
  } else {
    let count = document.getElementById(`${obj.board}-total`).innerText
    document.getElementById(`${obj.board}-total`).innerText = `${parseInt(count) - (parseInt(voteStatus)) }`
    document.getElementById(obj.board).setAttribute('data-vstatus', '0')                
    obj.vote = '0'
    try {
      const r = await fetch('/vote', 
        {

          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(obj),
        }
      )
      console.log('revert vote succesful', r)
    } catch (e) {
      console.error('issue posting vote')
    }
  }
}
</script>
</html>
